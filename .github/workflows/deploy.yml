name: Deploy to Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Upload files to Lightsail
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: "."
          target: "~/app"

      - name: SSH into Lightsail and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Install Node.js if not already installed
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Set up folders
            mkdir -p ~/app/client ~/app/server ~/app/build

            # Write client .env
            echo "VITE_TOMTOM_API_KEY=${{ secrets.VITE_TOMTOM_API_KEY }}" > ~/app/client/.env
            echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> ~/app/client/.env
            echo "VITE_ANON_KEY=${{ secrets.VITE_ANON_KEY }}" >> ~/app/client/.env

            # Write server .env
            echo "TOMTOM_API_KEY=${{ secrets.TOMTOM_API_KEY }}" > ~/app/server/.env
            echo "SUPABASE_PROJECT_ID=${{ secrets.SUPABASE_PROJECT_ID }}" >> ~/app/server/.env
            echo "SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}" >> ~/app/server/.env
            echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> ~/app/server/.env

            # Decode and write credentials.json
            echo "${{ secrets.CREDENTIALS_JSON }}" | base64 -d > ~/app/server/credentials.json

            cd ~/app/client
            npm install

            cd ~/app/server
            npm install


